basePath: /api/v1
definitions:
  models.ExchangeRequest:
    properties:
      amount:
        description: decimal string
        type: string
      from_currency:
        enum:
        - USD
        - EUR
        - RUB
        type: string
      to_currency:
        enum:
        - USD
        - EUR
        - RUB
        type: string
    required:
    - amount
    - from_currency
    - to_currency
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UserRegister:
    properties:
      email:
        type: string
      password:
        maxLength: 128
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.WalletTransaction:
    properties:
      amount:
        description: decimal string
        type: string
      currency:
        enum:
        - USD
        - EUR
        - RUB
        type: string
    required:
    - amount
    - currency
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: REST API для кошелька с поддержкой мультивалюты и обмена.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Currency Wallet API
  version: "1.0"
paths:
  /api/v1/exchange:
    post:
      consumes:
      - application/json
      description: Exchange one currency to another
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Exchange request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ExchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Exchange currency
      tags:
      - Exchange
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User register request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - Auth
  /exchange/rates:
    get:
      description: Get list of available exchange rates
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get exchange rates
      tags:
      - Exchange
  /wallet/balance:
    get:
      description: Get current balance for authenticated user
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get wallet balance
      tags:
      - Wallet
  /wallet/deposit:
    post:
      consumes:
      - application/json
      description: Deposit money into wallet
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Deposit request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.WalletTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deposit funds
      tags:
      - Wallet
  /wallet/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw money from wallet
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Withdraw request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.WalletTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Withdraw funds
      tags:
      - Wallet
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
